<?xml version="1.0" encoding="utf-8"?>

<Defs>
	<ThinkTreeDef>
		<defName>DrillyBoiConstant</defName>
		<thinkRoot Class="ThinkNode_Priority">
			<subNodes>

				<!-- Despawned -->
				<li Class="ThinkNode_Subtree">
					<treeDef>Despawned</treeDef>
				</li>
				
				<!-- Keep charging if we're already charging -->
				<li Class="ThinkNode_ConditionalRecharging">
					<subNodes>
						<li Class="JobGiver_GetEnergy_Charger" />
					</subNodes>
				</li>

				<li Class="ThinkNode_ConditionalCanDoConstantThinkTreeJobNow">
					<subNodes>
						<li Class="ThinkNode_ConditionalPlayerMech">
							<subNodes>
								<li Class="ThinkNode_ConditionalWorkMode" MayRequire="Ludeon.RimWorld.Biotech">
									<workMode>Recharge</workMode>
									<subNodes>
										<li Class="JobGiver_SeekAllowedArea" />
										<li Class="JobGiver_GetEnergy_Charger" />
										<li Class="JobGiver_GetEnergy_SelfShutdown">
											<forced>true</forced>
										</li>
									</subNodes>
								</li>
								<li Class="ThinkNode_ConditionalWorkMode" MayRequire="Ludeon.RimWorld.Biotech">
									<workMode>Work</workMode>
									<subNodes>
										<li Class="JobGiver_SeekAllowedArea" />
										<li Class="JobGiver_GetEnergy_Charger" />
										<li Class="SpecificWorkJobGiver.JobGiver_SpecificWork">
											<workGiverDef>Drill</workGiverDef>
										</li>
									</subNodes>
								</li>
								<li Class="ThinkNode_ConditionalWorkMode" MayRequire="Ludeon.RimWorld.Biotech">
									<workMode>SelfShutdown</workMode>
									<subNodes>
										<li Class="JobGiver_SeekAllowedArea" />
										<li Class="JobGiver_SelfShutdown" />
									</subNodes>
								</li>
							</subNodes>
						</li>
					</subNodes>
				</li>
			</subNodes>
		</thinkRoot>
	</ThinkTreeDef>

	<!-- DrillyBoi -->
	<ThingDef ParentName="LightMechanoid">
		<defName>Mech_DrillyBoi</defName>
		<label>drilly boi</label>
		<description>A small drilly boi</description>
		<statBases>
			<MoveSpeed>4.2</MoveSpeed>
			<!-- <Mining>10</Mining> -->
		</statBases>
		<race>
			<mechEnabledWorkTypes>
				<li>Mining</li>
			</mechEnabledWorkTypes>
			<lifeStageAges>
				<li>
					<def>MechanoidFullyFormed</def>
					<minAge>0</minAge>
					<soundWounded>Pawn_Mech_WarUrchin_Wounded</soundWounded>
					<soundDeath>Pawn_Mech_WarUrchin_Death</soundDeath>
					<soundCall>Pawn_Mech_WarUrchin_Call</soundCall>
				</li>
				<li>
					<def>MechanoidFullyFormed</def>
					<minAge>100</minAge>
					<soundWounded>Pawn_Mech_WarUrchin_Wounded</soundWounded>
					<soundDeath>Pawn_Mech_WarUrchin_Death</soundDeath>
					<soundCall>Pawn_Mech_WarUrchin_Call</soundCall>
				</li>
			</lifeStageAges>
			<thinkTreeConstant>DrillyBoiConstant</thinkTreeConstant>
			<baseHealthScale>1.3</baseHealthScale>
		</race>
	</ThingDef>
	
	<PawnKindDef ParentName="LightMechanoidKind">
		<defName>Mech_DrillyBoi</defName>
		<label>drilly boi</label>
		<labelPlural>drilly bois</labelPlural>
		<race>Mech_DrillyBoi</race>
		<allowInMechClusters>false</allowInMechClusters>
		<forceNoDeathNotification>true</forceNoDeathNotification>
		<lifeStages>
			<li>
				<bodyGraphicData>
					<texPath>Things/Pawn/Mechanoid/WarUrchin</texPath>
					<maskPath>Things/Pawn/Mechanoid/AllegianceOverlays/MechMinimech</maskPath>
					<shaderType>CutoutWithOverlay</shaderType>
					<graphicClass>Graphic_Multi</graphicClass>
					<drawSize>1.1</drawSize>
					<shadowData>
						<volume>(0.2, 0.3, 0.2)</volume>
					</shadowData>
				</bodyGraphicData>
			</li>
			<li>
				<bodyGraphicData>
					<texPath>Things/Pawn/Mechanoid/WarUrchinAncient</texPath>
					<maskPath>Things/Pawn/Mechanoid/AllegianceOverlays/MechMinimech</maskPath>
					<shaderType>CutoutWithOverlay</shaderType>
					<graphicClass>Graphic_Multi</graphicClass>
					<drawSize>1.1</drawSize>
					<shadowData>
						<volume>(0.2, 0.3, 0.2)</volume>
					</shadowData>
				</bodyGraphicData>
			</li>
		</lifeStages>      
		<weaponTags>
			<li>MechanoidGunSpiner</li>
		</weaponTags>
	</PawnKindDef>

</Defs>
